{
  "heading" : {
    "en" : "Publications",
    "de" : "Publikationen" },
  
  "abstract" : {
    "en" : "Abstract",
    "de" : "Zusammenfassung" },

  "publications" : [
    { "key" : "2014-thesis-evocells",
      "title": "Interaktive Visualisierung von hierarchischen, multivariaten und zeitlich variierenden Daten",
      "date": "2014-07-24",
      "authors": [ "Willy Scheibel" ],
      "published": "Master's Thesis at the Hasso Plattner Institute, University of Potsdam",
      
      "caption": {
        "de": "Eine Treemap kodiert Hierarchien durch rekursive Unterteilung von zweidimensionalen Flächen und ermöglicht die Darstellung mehrerer Attribute z.B. mit der Größe der Grundfläche, der extrudierten Höhe und der Knotenfarbe. Bisherige Treemap-Layoutalgorithmen und -Darstellungstechniken sind nur bedingt zum Vergleich zweier Zustände zu verschiedenen Zeitpunkten geeignet, da (1) keinne Vergleichbarkeit der Treemap-Knoten innerhalb einer Treemap und über verschiedene Zustände hinweg ist gegeben ist und (2) Darstellungstechniken für den Größenunterschied eines Knotens über die Zeit fehlen.
            Diese Arbeit stellt die Techniken EvoCell-Layouting, Change Map und Change Hints vor. EvoCell-Layouting ist ein neuer Treemap-Algorithmus, welcher ein vorhandenes Treemap-Layout iterativ verändert. Change Maps sind Dichtekarten zum verorten von Änderungen in der Treemap, unabhängig von der Änderungs- und der Knotengröße. Change Hints stellen die Änderungen in den räumlichen Dimensionen zwischen zwei Zuständen auf den Knoten der Treemap dar. Diese drei Techniken verbessern das Verständnis von Entwicklungen in temporalen, hierarchischen Daten.
            Neben einer prototypischen Implementierung und einer Diskussion über Alternativen, wird durch Performanz- und Speicherverbrauchsanalysen gezeigt, dass die Techniken auf Echtdaten anwendbar sind. Eine abschließende Fallstudie beleuchtet die Entwicklung eines Open-Source Projektes und zeigt markante Punkte in der Entwicklung, die durch vorhandene Hierarchievisualisierungen nur schwer ersichtlich sind.",
        "en": "A treemap recursively subdivides a two-dimensional area in order to encode a hierarchy and enables the visualization of multiple attributes e.g. with the size, the extruded height or the color of a node. Traditional treemap layout algorithms and rendering techniques can only be used for the comparison of two data sets at different points in time to some extent, as (1) no comparison between nodes in a treemap and between different states is possible and (2) there are no rendering techniques for the size differences of a node over time.
            This thesis introduces the techniques EvoCell-Layouting, Change Map, and Change Hints. EvoCell-Layouting is a novel treemap layout algorithm that iteratively changes a given treemap layout. Change Maps are density maps to locate changes in attribute values disregarding the difference and the size of the node. Change Hints visualize spatial changes between two states of a treemap. These three techniques enhance the comprehension of the evolution of temporal hierarchical data.
            A prototypical implementation, a discussion about alternatives, and performance and memory analyses demonstrate real data applicability. An additional case study reveals distinctive changes in the software system of a monitored open-source project that are hard to detect with traditional hierarchy visualizations."
      },
      
      "thumbnail" : "publications/2014-thesis-evocells.png",
      "publication": "https://www.researchgate.net/profile/Willy_Scheibel/publication/331399809",
      "downloads" : [
        { "href"  : "https://www.researchgate.net/profile/Willy_Scheibel/publication/331399809/inline/jsViewer/5c77be7692851c695046e78a?pdfJsDownload=1",
          "desc"  : "Thesis"
        } ],
      "doi": "10.13140/RG.2.2.33837.33763"
    },
    
    
    { "key"       : "2016-small-multiples",
      "bibtex"    : "std2016-small-multiples.bib",
      "title"     : "Interactive Revision Exploration using Small Multiples of Software Maps",
      "date"      : "2016-02-28",
      "authors"   : [ "Willy Scheibel", "Matthias Trapp", "Jürgen Döllner" ],
      "published" : "7th International Conference on Information Visualization Theory and Applications (IVAPP 2016)",
      
      "caption"   : {
        "en" : "To explore and to compare different revisions of complex software systems is a challenging task as it requires
                to constantly switch between different revisions and the corresponding information visualization. This paper
                proposes to combine the concept of small multiples and focus+context techniques for software maps to facilitate
                the comparison of multiple software map themes and revisions simultaneously on a single screen. This
                approach reduces the amount of switches and helps to preserve the mental map of the user. Given a software
                project the small multiples are based on a common dataset but are specialized by specific revisions and themes.
                The small multiples are arranged in a matrix where rows and columns represents different themes and revisions,
                respectively. To ensure scalability of the visualization technique we also discuss two rendering pipelines
                to ensure interactive frame-rates. The capabilities of the proposed visualization technique are demonstrated in
                a collaborative exploration setting using a high-resolution, multi-touch display.",
        "de" : "Die Exploration und der Vergleich verschiedener Revisionen eines komplexen Softwaresystems ist eine komplizierte
                Aufgabe, da es einen ständigen Wechsel zwischen den Revisionen und den Visualisierungen erfordert. Diese
                Ausarbeitung stellt eine Kombination von Small Multiples, Focus+Context Techniken und Software Maps vor, die den
                Vergleich zwischen mehreren Software Map Themen und Revisionen gleichzeitig auf einem Bildschirm ermöglicht. Dieser
                Ansatz reduziert die Anzahl der benötigten Kontextwechsel für den Nutzer und ermöglicht die Erstellung einer mentalen
                Karte. Dabei werden die Small Multiples zu einem Softwaresystem über einen gemeinsamen Datensatz erstellt und in
                einer Matrix angeordnet, in der Zeilen und Spalten für die unterschiedlichen Themen und Revisionen stehen. Eine
                interaktive, skalierbare Visualierung ist über die Nutzung einer der zwei vorgestellten Renderingabläufe möglich.
                Weiterhin wir die Technik im Rahmen eines High-Resolution, Multi-Touch Display gezeigt und besprochen." },

      "thumbnail" : "publications/2016-ivapp-small-multiples.png",
      "downloads" : [
        { "href"  : "https://www.researchgate.net/profile/Matthias_Trapp/publication/285164085/inline/jsViewer/56fbb61e08ae1b40b8062a54?pdfJsDownload=1",
          "desc"  : "Author Version"
        },
        { "href"  : "https://www.researchgate.net/profile/Willy_Scheibel/publication/331399816/inline/jsViewer/5c77ba33458515831f75e23b?pdfJsDownload=1",
          "desc"  : "Poster (Portrait)"
        },
        { "href"  : "https://www.researchgate.net/profile/Willy_Scheibel/publication/331399594/inline/jsViewer/5c77b9d0458515831f75e227?pdfJsDownload=1",
          "desc"  : "Poster (Landscape)"
        } ],
      "doi": "10.5220/0005694401310138"
    },
    
    
    { "key"       : "2016-decl3d-treemaps",
      "bibtex"    : "lsld2016-decl3d-treemaps.bib",
      "title"     : "Dynamic 2.5D Treemaps using Declarative 3D on the Web",
      "date"      : "2016-07-23",
      "authors"   : [ "Daniel Limberger", "Willy Scheibel", "Stefan Lemme", "Jürgen Döllner" ],
      "published" : "21st International Conference on Web3D Technology (Web3D '16)",
      
      "caption"   : {
        "en" : "The 2.5D treemap represents a general purpose visualization technique to map multi-variate hierarchical data in
                a scalable, interactive, and consistent way used in a number of application fields. In this paper, we explore
                the capabilities of Declarative 3D for the web-based implementation of 2.5D treemap clients. Particularly, we
                investigate how X3DOM and XML3D can be used to implement clients with equivalent features that interactively
                display 2.5D treemaps with dynamic mapping of attributes. We also show a first step towards a glTF-based
                implementation. These approaches are benchmarked focusing on their interaction capabilities with respect to
                rendering and speed of dynamic data mapping. We discuss the results for our representative example of a complex
                3D interactive visualization technique and summerize recommendations for improvements towards operational web
                clients.",
        "de" : "Die 2.5D Treemap stellt eine grundlegende, skalierbare und interaktive Visualisierungstechnik für multi-variate
                hierarchische Daten dar. In dieser Ausarbeitung durchleuchten wir die Möglichkeiten von deklarativem 3D für
                webbasierte 2.5D Treemap Clients. Besonderes Augenmerk legen wir auf X3DOM und XML3D, indem wir Clients mit
                gleichem Featureumfang (u.a. dynamische Attributmappings) für interaktive 2.5D Treemaps vergleichen. Weiterhin
                zeigen wir erste Ansätze für die Nutzung von glTF. Alle Ansätze wurden bezüglich ihrer Prozessierungs- und
                Renderinggeschwindigkeit. Wir diskutieren die Ergebnisse für unser representatives Beispiel einer komplexen 3D
                Visualisierungstechnik und fassen Verbesserungsvorschläge für produktive Web-Clients zusammen." },

      "thumbnail" : "publications/2016-web3d-decl3d-treemaps.png",
      "downloads" : [
        { "href"  : "https://www.researchgate.net/profile/Willy_Scheibel/publication/305420771/inline/jsViewer/5b2cb47b4585150d23c1f3ea?pdfJsDownload=1",
          "desc"  : "Author Version"
        },
        { "href"  : "https://www.researchgate.net/profile/Daniel_Limberger/publication/331407662/inline/jsViewer/5c77e4fa299bf1268d2c7e74?pdfJsDownload=1",
          "desc"  : "Slides"
        },
        { "href"  : "https://github.com/cgcostume/web3d-treemaps",
          "desc"  : "Source Code"
        },
        { "href"  : "http://cgcostume.github.io/web3d-treemaps/",
          "desc"  : "Demo"
        } ],
      "doi": "10.1145/2945292.2945313"
    },
    
    
    { "key"       : "2017-importance-based-aggregation",
      "bibtex"    : "lshd2017-importance-based-aggregation.bib",
      "title"     : "Reducing Visual Complexity in Software Maps using Importance-based Aggregation of Nodes",
      "date"      : "2017-02-27",
      "authors"   : [ "Daniel Limberger", "Willy Scheibel", "Sebastian Hahn", "Jürgen Döllner" ],
      "published" : "8th International Conference on Information Visualization Theory and Applications (IVAPP 2017)",
      
      "caption"   : {
        "en" : "Depicting massive software system data using software maps can result in visual clutter and increased cognitive load.
                This paper introduces an adaptive level-of-detail (LoD) technique that uses scoring for interactive
                aggregation on a per-node basis. The scoring approximates importance by degree-of-interest measures as well
                as screen and user-interaction scores. The technique adheres to established aggregation guidelines and was
                evaluated by means of two user studies. The first user study investigates task completion time in visual search.
                The second evaluates the readability of the presented nesting level contouring for aggregates. With the adap-
                tive LoD technique software maps allow for multi-resolution depictions of software system information. It
                facilitates efficient identification of important nodes and allows for additional annotation.",
        "de" : "Darstellungen massiver Softwaresystemdaten durch Softwarelagekarten können durch erhöhte kognitive Last und
                Visual Clutter beeinträchtigend für das Verständnis der Softwaresysteme sein. Diese Ausarbeitung stellt ein
                adaptives Level-of-Detail Verfahren vor, welches ein Bewertungssystem für interaktive Aggregation pro Knoten
                einsetzt. Das Bewertungssystem nähert die tatsächliche Relevanz über einen Revelanzgrad an, welcher über
                darstellungs- und nutzerbasierte Metriken ermittelt wird. Das Level-of-Detail Verfahren befolgt etablierte
                Aggregations-Richtlinien und wurde anhand von zwei Nutzerstudien evaluiert. Die erste Nutzerstudie untersucht
                die Bearbeitungszeiten von festgelegten Aufgaben. Die zweite wertet die Lestbarkeit der vorgestellen Nesting-
                Level-Konturen für Aggregate aus. Mit dem adaptiven Level-of-Detail Verfahren können Softwarelagekarten für
                Darstellungen von Softwareystemen auf unterschiedlichen Detailgraden eingesetzt werden. Es ermöglicht die
                effiziente Lokalisierung von wichtigen Knoten unter Bereitstellung von mehr Flächen für Beschriftung von Knoten." },

      "thumbnail" : "publications/2017-importance-based-aggregation.png",
      "downloads" : [
        { "href"  : "https://www.researchgate.net/profile/Daniel_Limberger/publication/313377340/inline/jsViewer/589dbd3845851598bab4014b?pdfJsDownload=1",
          "desc"  : "Author Version"
        },
        { "href"  : "https://www.researchgate.net/profile/Daniel_Limberger/publication/331407406/inline/jsViewer/5c77deb8299bf1268d2c7c7b?pdfJsDownload=1",
          "desc"  : "Slides"
        } ],
      "doi": "10.5220/0006267501760185",
    },
    
    
    { "key"       : "2017-attributed-vertex-clouds",
      "bibtex"    : "sbtd2017-attributed-vertex-clouds.bib",
      "title"     : "Attributed Vertex Clouds",
      "date"      : "2017-05-15",
      "authors"   : [ "Willy Scheibel", "Stefan Buschmann", "Matthias Trapp", "Jürgen Döllner" ],
      "published" : "GPU Zen",
      
      "caption"   : {
        "en" : "In todays computer graphics applications, large 3D scenes are rendered
                which consist of polygonal geometries such as triangle meshes. Using state-
                of-the-art techniques, this geometry is often represented on the GPU using
                vertex and index buffers, as well as additional auxiliary data such as tex-
                tures or uniform buffers. For polygonal meshes of
                arbitrary complexity, the described approach is indispensable. However,
                there are several types of simpler geometries (e.g., cuboids, spheres, tubes,
                or splats) that can be generated procedurally. We present an efficient data representation and render-
                ing concept for such geometries, denoted as attributed vertex clouds (AVCs).
                Using this approach, geometry is generated on the GPU during execution
                of the programmable rendering pipeline. Each
                vertex is used as the argument for a function that procedurally generates
                the target geometry. This function is called a transfer function, and it is
                implemented using shader programs and therefore executed as part of the
                rendering process.
                This approach allows for compact geometry representation and results
                in reduced memory footprints in comparison to traditional representations.
                By shifting geometry generation to the GPU, the resulting
                volatile geometry can be controlled flexibly, i.e., its position, parameteri-
                zation, and even the type of geometry can be modified without requiring
                state changes or uploading new data to the GPU. Performance measurements
                suggests improved rendering times and reduced memory transmission through the rendering pipeline.",
        "de" : "In heutigen computergrafischen Anwendungen werde zumeist große 3D Szenen gerendert, die aus polygonalen Geometrien wie Dreiecksnetze bestehen.
                Mit State-of-the-Art Techniken wird diese Geometrie auf der GPU mittels Vertex- und Indexbuffern enkodiert.
                For Polygonnetze beliebiger Komplexität ist dieser Ansatz unumgänglich.
                Allerdings gibt es Geometrietypen einfacherer Struktur (z. B. Würfel, Kugeln, Röhren oder Flächen) welche prozedural generiert werden können.
                Wir präsentieren eine effiziente Datenrepräsentation und Renderingkonzept für solche Geometrien, Attributed Vertex Cloud (AVC) genannt.
                Mit diesem Ansatz wird die Geometrie während der Ausführung der Renderingpipeline auf der Grafikkarte berechnet.
                Jeder Vertex der Geometrie wird als Argument an eine Funktion übergeben, welche die Zielgeometrie erzeugt.
                Diese Funktion nennen wir Transfer-Funktion und sie ist in Shader-Programmen implementiert und wird somit als Teil des Rendering-Prozesses ausgeführt.
                Der Ansatz ermöglicht kompakte Speicherrepräsentation der Geometrie gegenüber existierenden Verfahren.
                Die Verschiebung der Geometrieerzeugung auf die GPU ermöglicht auch die Umsetzung von flüchtiger Geometrie, welche dynamisch konfigurierbar ist (z. B. Position oder Parameter, sogar der Typ ist änderbar).
                Messungen der Ausführungszeiten deuten auf eine Verschnellerung der Framezeiten und eine geringere Speicher-Fußabdruck bei Datenübertragungen zwischen den Shader-Stages der Renderingpipeline." },

      "thumbnail" : "publications/2017-gpuzen-attributed-vertex-clouds.png",
      "downloads" : [
        { "href"  : "https://www.researchgate.net/profile/Willy_Scheibel/publication/313554437/inline/jsViewer/5c4afbe2299bf12be3e1f44a?pdfJsDownload=1",
          "desc"  : "Author Version"
        },
        { "href"  : "https://github.com/hpicgs/attributedvertexclouds",
          "desc"  : "Source Code"
        } ]
    },
    
    
    { "key"       : "2017-mixed-projection-treemaps",
      "bibtex"    : "lstd2017-mixed-projection-treemaps.bib",
      "title"     : "Mixed-Projection Treemaps: A Novel Approach Mixing 2D and 2.5D Treemaps",
      "date"      : "2017-07-11",
      "authors"   : [ "Daniel Limberger", "Willy Scheibel", "Matthias Trapp", "Jürgen Döllner" ],
      "published" : "21st International Conference on Information Visualisation (iV 2017)",
      
      "caption"   : {
        "en" : "2D treemaps are a space-filling visualization technique that facilitate exploration of non-spatial, attributed, tree-structured data using the visual variables size and color. In extension thereto, 2.5D treemaps introduce height for additional information display. This extension entails challenges such as increased rendering effort, occlusion, or the need for navigation techniques that counterbalance the advantages of 2D treemaps to a certain degree.
                This paper presents a novel technique for combining 2D and 2.5D treemaps using multi-perspective views to leverage the advantages of both treemap types. It enables a new form of overview+detail visualization for complex treemaps and contributes new concepts for real-time rendering of and interaction with mixed-projection treemaps. The technique operates by tilting up inner nodes using affine transformations and animated state transitions. The mixed use of orthogonal and perspective projections is discussed and application examples that facilitate exploration of multi-variate data and benefit from the reduced interaction overhead are demonstrated.",
        "de" : "2D Treemaps sind eine raumfüllende Visualisierungstechnik für die Exploration von abstrakten, attribuierten Daten mit Baumstruktur. Dabei werden die visuellen Variablen Größe und Farbe benutzt. Als Erweiterung führen die 2.5D Treemaps die Höhe für zusätzliche Informationsdarstellung ein. Diese Erweiterung kommt jedoch mit Herausforderungen wie der komplexeren Bildsynthese, Verdeckung oder angepassten Navigationstechniken einher, welche den Vorteile einer reinen 2D Treemap gegenüberstehen.
                Dieses Paper präsentiert eine neuartige Kombination von 2D und 2.5D Treemaps unter Nutzung von multiperspektiven Ansichten um die Vorteile beider Techniken zu vereinen. Es ermöglicht eine Form der Overview+Detail Visualisierung für komplexe Treemaps, welche über neue Konzepte im Echtzeitrendering und Interaktion als Mixed-Projection Treemaps dargestellt werden können. Die Visualisierungstechnik nutzt eine Drehung innerer Treemap-Knoten über affine Transformationen und animierte Übergänge. Dabei werden die gemeinsame Nutzung von orthogonaler und perspektivischer Projektion besprochen und Anwendungsbeispiele für die Exploration multivariater Daten gezeigt, die von dem geringeren Interaktions-Overhead profitieren." },

      "thumbnail" : "publications/2017-iv-mixed-projection-treemaps.png",
      "downloads" : [
        { "href"  : "https://www.researchgate.net/profile/Daniel_Limberger/publication/316999964/inline/jsViewer/5ab28be2aca272171001b92a?pdfJsDownload=1",
          "desc"  : "Author Version"
        },
        { "href"  : "https://www.researchgate.net/profile/Daniel_Limberger/publication/330106367/inline/jsViewer/5c77be80458515831f75e32b?pdfJsDownload=1",
          "desc"  : "Slides"
        } ],
      "doi": "10.1109/iV.2017.67",
    },
    
    
    { "key"       : "2018-evocells",
      "bibtex"    : "swd2018-evocells.bib",
      "title"     : "EvoCells – A Treemap Layout Algorithm for Evolving Tree Data",
      "date"      : "2018-01-29",
      "authors"   : [ "Willy Scheibel", "Christopher Weyand", "Jürgen Döllner" ],
      "published" : "9th International Conference on Information Visualization Theory and Applications (IVAPP 2018)",
      
      "caption"   : {
        "en" : "We propose the rectangular treemap layout algorithm EvoCells that maps changes in tree-structured data onto
                an initial treemap layout. Changes in topology and node weights are mapped to insertion, removal, growth, and
                shrinkage of the layout rectangles. Thereby, rectangles displace their neighbors and stretche their enclosing
                rectangles with a run-time complexity of O(n log n). An evaluation using layout stability metrics on the open
                source ElasticSearch software system suggests EvoCells as a valid alternative for stable treemap layouting.",
        "de" : "Wir stellen den rechteckigen Treemap Layout Algorithmus EvoCells vor, welcher Änderungen in baumstrukturierten
                Daten auf ein initiales Treemap Layout anwendet. Änderungen in der Topologie und der Knotengewichte werden
                auf Einfügen, Löschen, Vergrößern und Verkleinern von Rechtecken im Layout übertragen. Dabei verdrängen Rechtecke
                ihre Nachbarn und vergrößern ihre umschließenden Rechtecke mit einer Laufzeitkomplexität von O(n log n). Eine
                Evaluierung mit Layoutstabilitätsmetriken aus dem Open Source Softwaresystem ElasticSearch deutet an, dass
                EvoCells eine valide Alternative zum stabilen Treemap Layouting ist." },

      "thumbnail" : "publications/2018-ivapp-evocells.png",
      "downloads" : [
        { "href"  : "https://www.researchgate.net/profile/Willy_Scheibel/publication/321059325/inline/jsViewer/5b2cb4964585150d23c1f41f?pdfJsDownload=1",
          "desc"  : "Author Version"
        },
        { "href"  : "https://www.researchgate.net/profile/Willy_Scheibel/publication/331399914/inline/jsViewer/5c77bc00299bf1268d2b8178?pdfJsDownload=1",
          "desc"  : "Slides"
        }],
      "doi": "10.5220/0006617102730280",
    },
    
    
    { "key"       : "2019-hiviser",
      "bibtex"    : "shd2019-hiviser.bib",
      "title"     : "Design and Implementation of Web-Based Hierarchy Visualization Services",
      "date"      : "2019-02-28",
      "authors"   : [ "Willy Scheibel", "Judith Hartmann", "Jürgen Döllner" ],
      "published" : "10th International Conference on Information Visualization Theory and Applications (IVAPP 2019)",
      
      "caption"   : {
        "en" : "There is a rapidly growing, cross-domain demand for interactive, high-quality visualization techniques as
                components of web-based applications and systems. In this context, a key question is how visualization
                services can be designed, implemented, and operated based on Software-as-a-Service as software delivery
                model. In this paper, we present concepts and design of a SaaS framework and API of visualization techniques
                for tree-structured data, called HiViSer. Using representational state transfer (REST), the API supports
                different data formats, data manipulations, visualization techniques, and output formats. In particular, the API
                defines base resource types for all components required to create an image or a virtual scene of a hierarchy
                visualization. We provide a treemap visualization service as prototypical implementation for which subtypes
                of the proposed API resources have been created. The approach generally serves as a blue-print for fully
                web-based, high-end visualization services running on thin clients in a standard browser environment.",
        "de" : "" },

      "thumbnail" : "publications/2019-ivapp-hiviser.jpg",
      "downloads" : [
        { "href"  : "https://www.researchgate.net/profile/Willy_Scheibel/publication/330541206/inline/jsViewer/5c77b545a6fdcc4715a1c47d?pdfJsDownload=1",
          "desc"  : "Author Version"
        },
        { "href"  : "https://www.researchgate.net/profile/Willy_Scheibel/publication/331399770/inline/jsViewer/5c77b8c692851c695046e654?pdfJsDownload=1",
          "desc"  : "Slides"
        },
        { "desc": "Homepage", "href": "https://hiviser.treemap.de" }
      ],
      "doi": "10.5220/0007693201410152",
    },
    
    
    { "key": "2019-software-map-metaphors-and-techniques",
      "bibtex": "lstd2019-software-map-metaphors-and-techniques.bib",
      "title": "Advanced Visual Metaphors and Techniques for Software Maps",
      "date": "2019-10-01",
      "authors": [ "Daniel Limberger", "Willy Scheibel", "Matthias Trapp", "Jürgen Döllner" ],
      "published": "The 12th International Symposium on Visual Information Communication and Interaction (VINCI 2019)",
      "caption": {
        "en" : "Software maps provide a general-purpose interactive user interface and information display for software analytics tools.
        This paper systematically introduces and classifies software maps as a treemap-based technique for software cartography.
        It provides an overview of advanced visual metaphors and techniques, each suitable for interactive visual analytics tasks, that can be used to enhance the expressiveness of software maps.
        Thereto, the metaphors and techniques are briefly described, located within a visualization pipeline model, and considered within the software map design space.
        Consequent applications and use cases w.r.t. different types of software system data and software engineering data are discussed, arguing for a versatile use of software maps in visual software analytics.",
        "de" : ""
      },
      "thumbnail" : "publications/2019-vinci-software-map-metaphors-and-techniques.jpg",
      "downloads" : [
        { "href"  : "https://www.researchgate.net/profile/Daniel_Limberger/publication/335062804/inline/jsViewer/5d883828a6fdcc8fd6106c95?pdfJsDownload=1",
          "desc"  : "Author Version"
        }
      ],
      "doi": "10.1145/3356422.3356444",
    },
    
    
    { "key": "2020-modular-hiviser",
      "bibtex": "shld2020-modular-hiviser.bib",
      "title": "Visualization of Tree-structured Data using Web Service Composition",
      "date": "2020-02-20",
      "authors": [ "Willy Scheibel", "Judith Hartmann", "Daniel Limberger", "Jürgen Döllner" ],
      "published": "VISIGRAPP 2019: Computer Vision, Imaging and Computer Graphics Theory and Applications",
      "caption": {
        "en" : "This article reiterates on the recently presented hierarchy visualization service HiViSer and its API.
                It illustrates its decomposition into modular services for data processing and visualization of tree-structured data.
                The decomposition is aligned to the common structure of visualization pipelines and, in this way,
                facilitates attribution of the services' capabilities.
                Suitable base resource types are proposed and their structure and relations as well as a subtyping concept for specifics
                in hierarchy visualization implementations are detailed. Moreover, state-of-the-art quality standards and techniques for
                self-documentation and discovery of components are incorporated.
                As a result, a blueprint for Web service design, architecture, modularization, and composition is presented,
                targeting fundamental visualization tasks of tree-structured data, i.e.,
                gathering, processing, rendering, and provisioning. Finally, the applicability of the service components and the API
                is evaluated in the context of exemplary applications.",
        "de" : ""
      },
      "thumbnail" : "publications/2019-ivapp-hiviser-extended.jpg",
      "downloads" : [
        { "href"  : "https://www.researchgate.net/profile/Willy_Scheibel/publication/339362147/inline/jsViewer/5e5ccf0c4585152ce8ff8d73?pdfJsDownload=1",
          "desc"  : "Author Version"
        }
      ],
      "doi": "10.1007/978-3-030-41590-7_10",
    },
    
    
    { "key"       : "2020-treemap-taxonomy",
      "bibtex"    : "stld2020-treemap-taxonomy.bib",
      "title"     : "A Taxonomy of Treemap Visualization Techniques",
      "date"      : "2020-02-27",
      "authors"   : [ "Willy Scheibel", "Matthias Trapp", "Daniel Limberger", "Jürgen Döllner" ],
      "published" : "11th International Conference on Information Visualization Theory and Applications (IVAPP 2020)",
      
      "caption"   : {
        "en" : "A treemap is a visualization that has been specifically designed to facilitate the exploration of tree-structured
                data and, more general, hierarchically structured data. The family of visualization techniques that use a
                visual metaphor for parent-child relationships based “on the property of containment” (Johnson, 1993) is
                commonly referred to as treemaps. However, as the number of variations of treemaps grows, it becomes
                increasingly important to distinguish clearly between techniques and their specific characteristics. This paper
                proposes to discern between Space-filling Treemap, Containment Treemap, Implicit Edge Representation
                Tree, and Mapped Tree for classification of hierarchy visualization techniques and highlights their
                respective properties. This taxonomy is created as a hyponymy, i.e., its classes have an is-a relationship to one
                another. With this proposal, we intend to stimulate a discussion on a more unambiguous
                classification of treemaps and, furthermore, broaden what is understood by the concept of treemap itself.",
        "de" : "" },

      "thumbnail" : "publications/2020-ivapp-treemap-taxonomy.png",
      "downloads" : [
        { "href"  : "https://www.researchgate.net/profile/Willy_Scheibel/publication/338402878/inline/jsViewer/5e5cd038a6fdccbeba12bf83?pdfJsDownload=1",
          "desc"  : "Author Version"
        },
        { "href"  : "https://www.researchgate.net/profile/Willy_Scheibel/publication/339617725/inline/jsViewer/5e5cd13ba6fdccbeba12bfea?pdfJsDownload=1",
          "desc"  : "Slides"
        },
      ],
    },
    
    
    { "key"       : "2020-scatterplot",
      "bibtex"    : "wsltd2020-scatterplot.bib",
      "title"     : "A Framework for Interactive Exploration of Clusters in Massive Data using 3D Scatter Plots and WebGL",
      "date"      : "2020-12-01",
      "authors"   : [ "Lukas Wagner", "Willy Scheibel", "Daniel Limberger", "Matthias Trapp", "Jürgen Döllner" ],
      "published" : "ACM Web3D",
      
      "caption"   : {
        "en" : "This paper presents a rendering framework for the visualization of massive point datasets in the web. It includes highly interactive point rendering, cluster visualization, basic interaction methods, and importance-based labeling, while being available for both mobile and desktop browsers. The rendering style is customizable, as shown in figure 1. Our evaluation indicates that the framework facilitates interactive visualization of tens of millions of raw data points even without dynamic filtering or aggregation.",
        "de" : "" },

      "thumbnail" : "publications/2020-web3d-scatterplot-renderer.png",
      "downloads" : [],
    },
    
    
    { "key"       : "2020-treemap-evaluation",
      "bibtex"    : "fsltd2020-treemap-evaluation.bib",
      "title"     : "Survey on User Studies on the Effectiveness of Treemaps",
      "date"      : "2020-12-02",
      "authors"   : [ "Carolin Fiedler", "Willy Scheibel", "Daniel Limberger", "Matthias Trapp", "Jürgen Döllner" ],
      "published" : "ACM VINCI",
      
      "caption"   : {
        "en" : "Treemaps are a commonly used tool for the visual display and communication of tree-structured, multi-variate data. In order to confidently know when and how treemaps can best be applied, the research community uses usability studies and controlled experiments to \"understand the potential and limitations of our tools\" (Plaisant, 2004). To support the communities' understanding and usage of treemaps, this survey provides a comprehensive review and detailed overview of 69 user studies related to treemaps. However, due to pitfalls and shortcomings in design, conduct, and reporting of the user studies, there is little that can be reliably derived or accepted as a generalized statement. Fundamental open questions include configuration, compatible tasks, use cases, and perceptional characteristics of treemaps. The reliability of findings and statements is discussed and common pitfalls of treemap user studies are identified.",
        "de" : "" },

      "thumbnail" : "publications/2020-vinci-treemap-evaluation.png",
      "downloads" : [],
    },
    
    
    { "key"       : "2020-treemap-layouts",
      "bibtex"    : "sld2020-treemap-layouts.bib",
      "title"     : "Survey of Treemap Layout Algorithms",
      "date"      : "2020-12-03",
      "authors"   : [ "Willy Scheibel", "Daniel Limberger", "Jürgen Döllner" ],
      "published" : "ACM VINCI",
      
      "caption"   : {
        "en" : "This paper provides an overview of published treemap layout algorithms from 1991 to 2019 that were used for information visualization and computational geometry. First, a terminology is outlined for the precise communication of tree-structured data and layouting processes. Second, an overview and classification of layout algorithms is presented and application areas are discussed. Third, the use-case-specific adaption process is outlined and discussed. This overview targets practitioners and researchers by providing a starting point for own research, visualization design, and applications.",
        "de" : "" },

      "thumbnail" : "publications/2020-vinci-treemap-layouts.png",
      "downloads" : [],
    },
    
    
    { "key"       : "2021-software-forest",
      "bibtex"    : "achssld2021-software-forest.bib",
      "title"     : "Software Forest: A Visualization of Semantic Similarities in Source Code using a Tree Metaphor",
      "date"      : "2021-02-08",
      "authors"   : [ "Daniel Atzberger", "Tim Cech", "Merlin de la Haye", "Maximilian Söchting", "Willy Scheibel", "Daniel Limberger", "Jürgen Döllner" ],
      "published" : "SciTePress IVAPP",
      
      "caption"   : {
        "en" : "Software visualization techniques provide effective means for program comprehension tasks as they allow developers to interactively explore large code bases. A frequently encountered task during software development is the detection of source code files of similar semantic. To assist this task we present Software Forest, a novel 2.5D software visualization that enables interactive exploration of semantic similarities within a software system, illustrated as a forest. The underlying layout results from the analysis of the vocabulary of the software documents using Latent Dirichlet Allocation and Multidimensional Scaling and therefore reflects the semantic similarity between source code files. By mapping properties of a software entity, e.g., size metrics or trend data, to visual variables encoded by various, figurative tree meshes, aspects of a software system can be displayed. This concept is complemented with implementation details as well as a discussion on applications.",
        "de" : "" },

      "thumbnail" : "publications/2021-ivapp-software-forest.png",
      "downloads" : [],
    }
  ]
}
